define(function(){		var Planet = function(x,y,width){				this.x = x; this.y = y;		this.shape=[];		this.col1 = Math.floor(Math.random()*90)+10; this.col2 = Math.floor(Math.random()*90)+10; this.col3 = Math.floor(Math.random()*90)+10;		this.col = "#"+this.col1+this.col2+this.col3;		this.numRings = Math.floor(Math.random()*4);		this.draw = function(context){			for(var i=1;i<=this.numRings;i++)				this.drawRing(context,true,width *(i/3 + 1),this.x,this.y);			if(!this.grd){				this.grd=context.createLinearGradient(x-width,y-width,x-width,width+y);				this.grd.addColorStop(0,"black");				this.grd.addColorStop(0.5,this.col);				this.grd.addColorStop(1,"black");}			context.fillStyle = this.grd;			//context.fillStyle = "#FF0000";			context.beginPath();			context.arc(this.x, this.y, width, 0, 2 * Math.PI, false);			context.fill();						for(var i=1;i<=this.numRings;i++)				this.drawRing(context,false,width *(i/3 + 1),this.x,this.y);		};		this.update = function(){					}; 		this.drawRing = function(context,back,radius,x,y){			context.save();			context.translate(x, y);			context.scale(1, 0.3);			context.beginPath();			if(back)				context.arc(0, 0, radius, Math.PI, 0, false);			else				context.arc(0, 0, radius, 0, Math.PI, false);			context.restore();			context.strokeStyle = "white";			context.stroke();			context.closePath();		}			};	Planet.pList = [];	Planet.draw = function(context){		for(var i=0;i<Planet.pList.length;i++)		{			Planet.pList[i].draw(context);		}	};	Planet.update = function(){		for(var i=0;i<Planet.pList.length;i++)		{			Planet.pList[i].update();		}			};	Planet.add = function(x,y){		var plan = new Planet(x,y,Math.random()*100);		Planet.pList.push(plan);		};	return Planet;});